{"version":3,"sources":["Components/Statistics.js","Components/FeedbackOptions.js","Components/Section.js","Components/NotificationMessage.js","App.js","index.js"],"names":["Statistics","props","good","neutral","bad","total","positiveFeedbackPercentage","defaultProps","FeedbackOptions","onLeaveFeedback","options","feedbackTypes","Object","keys","map","feedbackType","type","key","onClick","Section","title","children","Notification","message","App","state","updateStat","setState","prevState","countTotalFeedback","values","reduce","acc","value","countPositiveFeedbackPercentage","totalFeedback","goodFeedback","Math","round","this","NotificationMessage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAGA,SAASA,EAAWC,GAAQ,IAClBC,EAA0DD,EAA1DC,KAAMC,EAAoDF,EAApDE,QAASC,EAA2CH,EAA3CG,IAAKC,EAAsCJ,EAAtCI,MAAOC,EAA+BL,EAA/BK,2BACnC,OACE,iCACE,oCAAUJ,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDAAuBC,EAAvB,MAKNN,EAAWO,aAAe,CACxBD,2BAA4B,GAWfN,QCCAQ,MA1Bf,YAAwD,IAA7BC,EAA4B,EAA5BA,gBAAiBC,EAAW,EAAXA,QACpCC,EAAgBC,OAAOC,KAAKH,GAClC,OACE,6BACGC,EAAcG,KAAI,SAACC,GAAD,OACjB,4BACEC,KAAK,SACLC,IAAKF,EACLG,QAAS,kBAAMT,EAAgBM,KAE9BA,QCIII,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,oCACGD,GAAS,4BAAKA,GACdC,ICLP,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,2BAAIA,GAGbD,EAAaf,aAAe,CAC1BgB,QAAS,qBAGID,QCLME,E,4MACnBC,MAAQ,CACNvB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPsB,WAAa,SAACV,GACZ,EAAKW,UAAS,SAACC,GACb,OAAO,eACJZ,EAAOY,EAAUZ,GAAQ,O,EAKhCa,mBAAqB,kBACnBjB,OAAOkB,OAAO,EAAKL,OAAOM,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAEhEC,gCAAkC,SAACC,EAAeC,GAAhB,OAChCC,KAAKC,MAAOF,EAAeD,EAAiB,M,uDAEpC,IAAD,EACwBI,KAAKd,MAA5BvB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQkC,KAAKV,qBACbvB,EAA6BiC,KAAKL,gCACtC7B,EACAH,GAGF,OACE,6BACE,kBAAC,EAAD,CAASkB,MAAM,yBACb,kBAAC,EAAD,CACEX,gBAAiB8B,KAAKb,WACtBhB,QAAS6B,KAAKd,SAGlB,kBAAC,EAAD,CAASL,MAAM,cACZf,EAAQ,EACP,kBAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,2BAA4BA,IAG9B,kBAACkC,EAAD,Y,GA/CqBC,aCFjCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.74a3b7d1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Statistics(props) {\r\n  const { good, neutral, bad, total, positiveFeedbackPercentage } = props;\r\n  return (\r\n    <section>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback: {positiveFeedbackPercentage}%</p>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.defaultProps = {\r\n  positiveFeedbackPercentage: 0,\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number,\r\n  positiveFeedbackPercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction FeedbackOptions({ onLeaveFeedback, options }) {\r\n  const feedbackTypes = Object.keys(options);\r\n  return (\r\n    <div>\r\n      {feedbackTypes.map((feedbackType) => (\r\n        <button\r\n          type=\"button\"\r\n          key={feedbackType}\r\n          onClick={() => onLeaveFeedback(feedbackType)}\r\n        >\r\n          {feedbackType}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.shape({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\n\r\nfunction Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nNotification.defaultProps = {\r\n  message: \"No feedback given\",\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport Statistics from \"./Components/Statistics\";\nimport FeedbackOptions from \"./Components/FeedbackOptions\";\nimport Section from \"./Components/Section\";\nimport NotificationMessage from \"./Components/NotificationMessage\";\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  updateStat = (type) => {\n    this.setState((prevState) => {\n      return {\n        [type]: prevState[type] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () =>\n    Object.values(this.state).reduce((acc, value) => acc + value, 0);\n\n  countPositiveFeedbackPercentage = (totalFeedback, goodFeedback) =>\n    Math.round((goodFeedback / totalFeedback) * 100);\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage(\n      total,\n      good\n    );\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            onLeaveFeedback={this.updateStat}\n            options={this.state}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positiveFeedbackPercentage={positiveFeedbackPercentage}\n            />\n          ) : (\n            <NotificationMessage />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}